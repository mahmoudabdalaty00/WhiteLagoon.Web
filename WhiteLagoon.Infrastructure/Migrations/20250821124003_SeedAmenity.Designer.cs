// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WhiteLagoon.Infrastructure.Data;

#nullable disable

namespace WhiteLagoon.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250821124003_SeedAmenity")]
    partial class SeedAmenity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WhiteLagoon.Domain.Entities.Amenity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VillaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VillaId");

                    b.ToTable("Amenities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Enjoy a relaxing private pool",
                            Name = "Private Pool",
                            VillaId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "High-speed internet included",
                            Name = "Free WiFi",
                            VillaId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Cozy indoor fireplace",
                            Name = "Fireplace",
                            VillaId = 2
                        },
                        new
                        {
                            Id = 4,
                            Description = "Relaxing outdoor hot tub",
                            Name = "Hot Tub",
                            VillaId = 2
                        });
                });

            modelBuilder.Entity("WhiteLagoon.Domain.Entities.Villa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Occupancy")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Sqft")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Villas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A villa with a stunning beach view.",
                            ImageUrl = "https://www.bing.com/ck/a?!&&p=43cdb6ccfa1f7379d23e4a02b9154bf2e7e9c51281e99b698f5cf6ead584a3f5JmltdHM9MTc1NTY0ODAwMA&ptn=3&ver=2&hsh=4&fclid=2c66945a-1217-6b5c-2159-84b9136b6a71&u=a1L2ltYWdlcy9zZWFyY2g_cT12aWxsYStpbWFnZXMmaWQ9QjkzRkZGNjUwRDQxMDU4QTAzN0U4QUVEQTc5MkVENUJGQzZBNzNCOCZGT1JNPUlBQ0ZJUg&ntb=1",
                            Name = "Luxury Beach Villa",
                            Occupancy = 4,
                            Price = 500.0,
                            Sqft = 1200
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Quiet villa in the mountains.",
                            ImageUrl = "https://www.bing.com/ck/a?!&&p=43cdb6ccfa1f7379d23e4a02b9154bf2e7e9c51281e99b698f5cf6ead584a3f5JmltdHM9MTc1NTY0ODAwMA&ptn=3&ver=2&hsh=4&fclid=2c66945a-1217-6b5c-2159-84b9136b6a71&u=a1L2ltYWdlcy9zZWFyY2g_cT12aWxsYStpbWFnZXMmaWQ9QjkzRkZGNjUwRDQxMDU4QTAzN0U4QUVEQTc5MkVENUJGQzZBNzNCOCZGT1JNPUlBQ0ZJUg&ntb=1",
                            Name = "Mountain Retreat",
                            Occupancy = 3,
                            Price = 350.0,
                            Sqft = 950
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Located in the heart of the city.",
                            ImageUrl = "https://s-media-cache-ak0.pinimg.com/originals/22/80/13/228013d23c2ca5ed80a74c6bfd6da3e2.jpg",
                            Name = "City Center Villa",
                            Occupancy = 5,
                            Price = 600.0,
                            Sqft = 1500
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2025, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Experience the desert lifestyle.",
                            ImageUrl = "https://dynamic-media-cdn.tripadvisor.com/media/photo-o/07/0b/fa/c1/diana-hotel.jpg?w=900&h=500&s=1",
                            Name = "Desert Escape",
                            Occupancy = 4,
                            Price = 400.0,
                            Sqft = 1100
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2025, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Villa with a relaxing lake view.",
                            ImageUrl = "https://dynamic-media-cdn.tripadvisor.com/media/photo-o/11/3b/a0/70/diana-hotel.jpg?w=300&h=200&s=1",
                            Name = "Lake House Villa",
                            Occupancy = 4,
                            Price = 450.0,
                            Sqft = 1300
                        });
                });

            modelBuilder.Entity("WhiteLagoon.Domain.Entities.VillaNumber", b =>
                {
                    b.Property<int>("Villa_Number")
                        .HasColumnType("int");

                    b.Property<string>("SpecialDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VillaId")
                        .HasColumnType("int");

                    b.HasKey("Villa_Number");

                    b.HasIndex("VillaId");

                    b.ToTable("VillaNumbers");

                    b.HasData(
                        new
                        {
                            Villa_Number = 101,
                            SpecialDetails = "Beachside, ground floor",
                            VillaId = 1
                        },
                        new
                        {
                            Villa_Number = 102,
                            SpecialDetails = "Top floor, mountain view",
                            VillaId = 2
                        },
                        new
                        {
                            Villa_Number = 201,
                            SpecialDetails = "Penthouse in city center",
                            VillaId = 3
                        },
                        new
                        {
                            Villa_Number = 301,
                            SpecialDetails = "Desert escape with pool",
                            VillaId = 4
                        },
                        new
                        {
                            Villa_Number = 401,
                            SpecialDetails = "Lake view private suite",
                            VillaId = 5
                        });
                });

            modelBuilder.Entity("WhiteLagoon.Domain.Entities.Amenity", b =>
                {
                    b.HasOne("WhiteLagoon.Domain.Entities.Villa", "Villa")
                        .WithMany()
                        .HasForeignKey("VillaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Villa");
                });

            modelBuilder.Entity("WhiteLagoon.Domain.Entities.VillaNumber", b =>
                {
                    b.HasOne("WhiteLagoon.Domain.Entities.Villa", "Villa")
                        .WithMany()
                        .HasForeignKey("VillaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Villa");
                });
#pragma warning restore 612, 618
        }
    }
}
